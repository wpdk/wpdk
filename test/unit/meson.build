# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2020, MayaData Inc. All rights reserved.
# Copyright (c) 2020, DataCore Software Corporation. All rights reserved.

cflags = [
	'-DCHECK_UNIMPLEMENTED',
]

cppflags = [ ]

sources = [
	'main.c',
	'error_ut.c',
	'fatal_ut.c',
	'include_c_ut.c',
	'include_cpp_ut.cpp',
	'stat_ut.c',
	'stdio_ut.c',
	'string_ut.c',
	'strings_ut.c',
	'uio_ut.c',
	'uuid_ut.c',
	'unistd_ut.c',
]

include_sources = [
	'include_c/_mingw_h.c',
	'include_c/arpa_inet_h.c',
	'include_c/net_if_h.c',
	'include_c/netinet_in_h.c',
	'include_c/netinet_tcp_h.c',
	'include_c/openssl_md5_h.c',
	'include_c/sys_cdefs_h.c',
	'include_c/sys_epoll_h.c',
	'include_c/sys_file_h.c',
	'include_c/sys_ioctl_h.c',
	'include_c/sys_mman_h.c',
	'include_c/sys_queue_h.c',
	'include_c/sys_resource_h.c',
	'include_c/sys_select_h.c',
	'include_c/sys_socket_h.c',
	'include_c/sys_stat_h.c',
	'include_c/sys_time_h.c',
	'include_c/sys_types_h.c',
	'include_c/sys_uio_h.c',
	'include_c/sys_un_h.c',
	'include_c/sys_user_h.c',
	'include_c/sys_wait_h.c',
	'include_c/corecrt_h.c',
	'include_c/dirent_h.c',
	'include_c/errno_h.c',
	'include_c/fcntl_h.c',
	'include_c/getopt_h.c',
	'include_c/ifaddrs_h.c',
	'include_c/libaio_h.c',
	'include_c/limits_h.c',
	'include_c/netdb_h.c',
	'include_c/poll_h.c',
	'include_c/pthread_h.c',
	'include_c/regex_h.c',
	'include_c/sched_h.c',
	'include_c/semaphore_h.c',
	'include_c/signal_h.c',
	'include_c/stdio_h.c',
	'include_c/stdlib_h.c',
	'include_c/string_h.c',
	'include_c/strings_h.c',
	'include_c/syslog_h.c',
	'include_c/termios_h.c',
	'include_c/unistd_h.c',
	'include_c/uuid_uuid_h.c',
	'include_cpp/_mingw_h.cpp',
	'include_cpp/arpa_inet_h.cpp',
	'include_cpp/net_if_h.cpp',
	'include_cpp/netinet_in_h.cpp',
	'include_cpp/netinet_tcp_h.cpp',
	'include_cpp/openssl_md5_h.cpp',
	'include_cpp/sys_cdefs_h.cpp',
	'include_cpp/sys_epoll_h.cpp',
	'include_cpp/sys_file_h.cpp',
	'include_cpp/sys_ioctl_h.cpp',
	'include_cpp/sys_mman_h.cpp',
	'include_cpp/sys_queue_h.cpp',
	'include_cpp/sys_resource_h.cpp',
	'include_cpp/sys_select_h.cpp',
	'include_cpp/sys_socket_h.cpp',
	'include_cpp/sys_stat_h.cpp',
	'include_cpp/sys_time_h.cpp',
	'include_cpp/sys_types_h.cpp',
	'include_cpp/sys_uio_h.cpp',
	'include_cpp/sys_un_h.cpp',
	'include_cpp/sys_user_h.cpp',
	'include_cpp/sys_wait_h.cpp',
	'include_cpp/corecrt_h.cpp',
	'include_cpp/dirent_h.cpp',
	'include_cpp/errno_h.cpp',
	'include_cpp/fcntl_h.cpp',
	'include_cpp/getopt_h.cpp',
	'include_cpp/ifaddrs_h.cpp',
	'include_cpp/libaio_h.cpp',
	'include_cpp/limits_h.cpp',
	'include_cpp/netdb_h.cpp',
	'include_cpp/poll_h.cpp',
	'include_cpp/pthread_h.cpp',
	'include_cpp/regex_h.cpp',
	'include_cpp/sched_h.cpp',
	'include_cpp/semaphore_h.cpp',
	'include_cpp/signal_h.cpp',
	'include_cpp/stdio_h.cpp',
	'include_cpp/stdlib_h.cpp',
	'include_cpp/string_h.cpp',
	'include_cpp/strings_h.cpp',
	'include_cpp/syslog_h.cpp',
	'include_cpp/termios_h.cpp',
	'include_cpp/unistd_h.cpp',
	'include_cpp/uuid_uuid_h.cpp',
]

# Disable g++ warnings for #include_next
if cpp.get_id() == 'gcc' and cpp.has_argument('-Wno-pedantic')
  cppflags += [ '-Wno-pedantic' ]
endif

unit_tests = executable('unit_tests',
		[ sources, include_sources, ],
		c_args: [ cflags, '-D_WPDK_UNIT_TESTS_' ],
		cpp_args: [ cflags, cppflags, '-D_WPDK_UNIT_TESTS_' ],
		include_directories: [ global_includes ],
		link_with : [ static_lib ],
		dependencies : cunit_dep,
		link_args : [ '-lws2_32', '-lrpcrt4' ],
		install: true
)
